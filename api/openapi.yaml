openapi: 3.0.2
info:
  title: API ShoppingList
  description: API for a shopping list mobile application
  contact:
    name: RUET Sebastien
    email: dev@ruets.pro
  version: 1.0.0
servers:
- url: https://localhost:8080
paths:
  /:
    get:
      tags:
      - Welcome
      summary: Return the description of the API and the list of methods
      operationId: rootGET
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Welcome
  /home:
    get:
      tags:
      - Home
      summary: Return the list of all homes
      operationId: homeGET
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Home
    post:
      tags:
      - Home
      summary: Add a home
      operationId: homePOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Home'
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Home
  /home/{homeId}:
    get:
      tags:
      - Home
      summary: Return the home with the given id
      operationId: homeGETbyID
      parameters:
      - name: homeId
        in: path
        description: Id of the home to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Home
    put:
      tags:
      - Home
      summary: Update the home with the given id
      operationId: homePUT
      parameters:
      - name: homeId
        in: path
        description: Id of the home to update
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Home'
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Home
    delete:
      tags:
      - Home
      summary: Delete the home with the given id
      operationId: homeDELETE
      parameters:
      - name: homeId
        in: path
        description: Id of the home to delete
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Home
  /home/{homeId}/shop:
    get:
      tags:
      - Shop
      summary: Return the list of all shops for this home
      operationId: shopGET
      parameters:
      - name: homeId
        in: path
        description: Id of the home where search to
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Home
    post:
      tags:
      - Shop
      summary: Add a shop for this home
      operationId: shopPOST
      parameters:
      - name: homeId
        in: path
        description: Id of the home where add the shop
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Shop
  /shop/{shopId}:
    get:
      tags:
      - Shop
      summary: Return the shop with the given id
      operationId: shopGETbyID
      parameters:
      - name: shopId
        in: path
        description: Id of the shop to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Shop
    put:
      tags:
      - Shop
      summary: Update the shop with the given id
      operationId: shopPUT
      parameters:
      - name: shopId
        in: path
        description: Id of the shop to update
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Shop
    delete:
      tags:
      - Shop
      summary: Delete the shop with the given id
      operationId: shopDELETE
      parameters:
      - name: shopId
        in: path
        description: Id of the shop to delete
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Shop
  /shop/{shopId}/shoppingList:
    get:
      tags:
      - ShoppingList
      summary: Return the list of all items in the shopping list for this shop
      operationId: shoppingListGET
      parameters:
      - name: shopId
        in: path
        description: Id of the shop where search to
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Shop
    post:
      tags:
      - ShoppingList
      summary: Add an item in the shopping list for this shop
      operationId: shoppingListPOST
      parameters:
      - name: shopId
        in: path
        description: Id of the shop where add the item
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: ShoppingList
    delete:
      tags:
      - ShoppingList
      summary: Delete all items in the shopping list for this shop
      operationId: shoppingListDELETE
      parameters:
      - name: shopId
        in: path
        description: Id of the shop where delete the items
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: ShoppingList
  /shop/{shopId}/cart:
    get:
      tags:
      - Cart
      summary: Return the list of all items in the cart for this shop
      operationId: cartGET
      parameters:
      - name: shopId
        in: path
        description: Id of the shop where search to
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Shop
    post:
      tags:
      - Cart
      summary: Add an item in the cart for this shop
      operationId: cartPOST
      parameters:
      - name: shopId
        in: path
        description: Id of the shop where add the item
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Cart
    delete:
      tags:
      - Cart
      summary: Delete all items in the cart for this shop
      operationId: cartDELETE
      parameters:
      - name: shopId
        in: path
        description: Id of the shop where delete the items
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Cart
  /item/{itemId}:
    get:
      tags:
      - Item
      summary: Return the item with the given id
      operationId: itemGETbyID
      parameters:
      - name: itemId
        in: path
        description: Id of the item to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Item
    put:
      tags:
      - Item
      summary: Update the item with the given id
      operationId: itemPUT
      parameters:
      - name: itemId
        in: path
        description: Id of the item to update
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Item
    delete:
      tags:
      - Item
      summary: Delete the item with the given id
      operationId: itemDELETE
      parameters:
      - name: itemId
        in: path
        description: Id of the item to delete
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Item
  /item/{itemId}/moveToCart:
    post:
      tags:
      - Item
      summary: Move the item with the given id from the shopping list to the cart
      operationId: itemMoveToCart
      parameters:
      - name: itemId
        in: path
        description: Id of the item to move
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Item
  /item/{itemId}/moveToShoppingList:
    post:
      tags:
      - Item
      summary: Move the item with the given id from the cart to the shopping list
      operationId: itemMoveToShoppingList
      parameters:
      - name: itemId
        in: path
        description: Id of the item to move
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Item
  /home/{homeId}/category:
    get:
      tags:
      - Category
      summary: Return the list of all categories for this home
      operationId: categoryGET
      parameters:
      - name: homeId
        in: path
        description: Id of the home where search to
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Category
    post:
      tags:
      - Category
      summary: Add a category for this home
      operationId: categoryPOST
      parameters:
      - name: homeId
        in: path
        description: Id of the home where add the category
        required: true
        style: simple
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        "201":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Category
    delete:
      tags:
      - Category
      summary: Delete all categories for this home
      operationId: categoryDELETE
      parameters:
      - name: homeId
        in: path
        description: Id of the home where delete the categories
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Request correctly executed
        "400":
          description: Client error ?
      x-swagger-router-controller: Category
components:
  schemas:
    Home:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        key:
          type: string
        shops:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    Shop:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        shoppingLists:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        cart:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Item:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        quantity:
          type: integer
        category:
          $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
